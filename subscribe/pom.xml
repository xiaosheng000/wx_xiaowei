<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.xwjava</groupId>
    <artifactId>wx_xiaowei</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  <artifactId>subscribe</artifactId>
  
  <dependencies>
  		<dependency>
  			<groupId>${project.groupId}</groupId>
  			<artifactId>common</artifactId>
  			<version>${project.version}</version>
  		</dependency>
  			
  		
	    <!--JAXB的API，一般引入spring,JPI相关的依赖，以后都有  -->    
	    <dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
		 </dependency>
		<!--JAXB的核心库  -->		
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-core</artifactId>
			<version>2.3.0.1</version>
		</dependency>
		<!--JAXB的实现库  -->
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>2.3.2</version>
		</dependency>
		<!--如果使用这个Jackson,那么就用这个转换器即可  -->
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
		</dependency>
	    
       
	
	    <!-- 加入Spring Data JPA的依赖，会自动下载Hibernate等相关的依赖文件，而且会自动完成配置 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!-- 用于访问Redis的自动配置 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		<!-- Spring MVC的自动配置 -->
		<!-- <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency> -->
        <!-- 开发者工具，用于实现热部署（修改文件以后马上生效） -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<!-- scope必须是runtime才能生效 -->
			<scope>runtime</scope>
		</dependency>
		<!-- MySQL的数据库驱动 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- 单元测试 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<!-- 仅在单元测试的时候有效 -->
			<scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>junit</groupId>
		    <artifactId>junit</artifactId>
		    <!-- 每个依赖的version是必须的，但是由于继承了Spring Boot的项目配置，所以可以省略！ -->
<!-- 		    <version>4.12</version> -->
		</dependency>
	</dependencies>

	<build>
		<plugins>
		    <!-- 可选的，Spring Boot的Maven插件，用于生成jar文件的时候，把所有相关文件全部打包在一起 -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<!-- 可以打包成一个可执行jar文件 -->
					<executable>true</executable>
					<!-- fork为true的时候 -->
					<!-- 将可以使用 mvn spring-boot:start 启动程序 -->
					<!-- 并且可以使用 mvn spring-boot:stop 停止程序 -->
					<fork>true</fork>
					<!-- 每个fork出来的进程都会需要一个JMX端口，不能重复 -->
					<!-- 建议：每个人使用一段的端口号，比如阿宝使用 9001~9099，小宝使用9100~9199 -->
					<jmxPort>9802</jmxPort>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>